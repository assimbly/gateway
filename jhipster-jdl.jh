entity Gateway {
	name String,
    type GatewayType,
	environmentName String,
	stage EnvironmentType
	defaultFromEndpointType String,
	defaultToEndpointType String,
	defaultErrorEndpointType String
}

entity EnvironmentVariables {
	key String,
	value String
}

entity Flow {
	name String,
	autoStart Boolean	
}

entity FromEndpoint {
	type EndpointType,
    uri String,
    options String
}

entity ToEndpoint {
	type EndpointType,
    uri String,
    options String
}

entity ErrorEndpoint {
	type EndpointType,
    uri String,
    options String
}

entity Service {
	name String,
	type String,
	url String,
	username String,
	password String,
	driver String,
	configuration String
}

entity Header {
	name String
}

entity HeaderKeys {
	key String,
	value String,
	type String	
}


enum GatewayType {
    FILE, BROKER
}

enum EnvironmentType {
    DEVELOPMENT, TEST, ACCEPTANCE, PRODUCTION
}


enum EndpointType {
   SONICMQ, ACTIVEMQ, KAFKA, SJMS, SQL, HTTP4, SFTP, STREAM, WASTEBIN, FILE
}

relationship OneToMany {
	Gateway{flowRoute} to Flow
}

relationship OneToMany {
	Gateway{environmentVariables} to EnvironmentVariables
}

relationship OneToOne {
	Flow{fromEndpoint} to FromEndpoint
}

relationship OneToOne {
	Flow{errorEndpoint} to ErrorEndpoint
}

relationship OneToMany {
	Flow{toEndpoint} to ToEndpoint
}

relationship OneToOne {
	FromEndpoint{service} to Service,
    ToEndpoint{service} to Service,
    ErrorEndpoint{service} to Service
}

relationship OneToOne {
	FromEndpoint{header} to Header,
    ToEndpoint{header} to Header,
    ErrorEndpoint{header} to Header
}

relationship OneToMany {
	Header{headerKeys} to HeaderKeys
}

// Set pagination options
paginate Flow with infinite-scroll

dto * with mapstruct