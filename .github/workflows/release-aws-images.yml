name: Release Docker Images on AWS ECR (elastic container registry)

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      module:
        description: 'Kind of module to build'
        default: 'full'
        type: string
      branch:
        description: 'Branch to use'
        default: 'develop'
        type: string
      tag:
        description: 'Tag to use'
        default: 'develop'
        type: string
      type:
        description: 'Type: default or full (includes custom components)'
        default: 'default'
        type: string

jobs:
  publish_docker_images:
    runs-on: ubuntu-latest

    env:
      BUILD_TAG: ${{ inputs.module }}
      VERSION_TAG: ${{ inputs.branch }}
      GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:

      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          ref: "${{ inputs.branch }}"

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:

          repositories: >
            [
              {
                "id": "maven",
                "name": "Maven Central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "name": "Assimbly Base Repository",
                "url": "https://maven.pkg.github.com/assimbly/base",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Runtime Repository",
                "url": "https://maven.pkg.github.com/assimbly/runtime",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Custom-Components Repository",
                "url": "https://maven.pkg.github.com/assimbly/custom-components",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "aurea",
                "name": "Aurea Sonic Repository",
                "url": "https://int-factory.aurea.com/nexus/content/repositories/sonic-releases/"
              }
            ]

          servers: >
            [
              {
                "id": "github",
                "username": "assimbly",
                "password": "${{ secrets.GITHUB_TOKEN }}"
              }
            ]

      - name: Remove HTTP blocker from the built in settings.xml
        run: |
          export MAVEN_PATH=$(mvn -X | grep "home" | head -1 | cut -d " " -f 3)
          echo "this is the path: $MAVEN_PATH"
          echo '<?xml version="1.0" encoding="UTF-8"?>' > "$MAVEN_PATH/conf/settings.xml"
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.2.0" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">' >> "$MAVEN_PATH/conf/settings.xml"
          echo '</settings>' >> "$MAVEN_PATH/conf/settings.xml"
          cat $MAVEN_PATH/conf/settings.xml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push gateway image to Amazon ECR
        run: |
          clear & ./gradlew clean bootJar jib -Djib.to.image=902987087860.dkr.ecr.eu-west-1.amazonaws.com/gateway-${{ inputs.module }}:${{ inputs.tag }} --settings-file ./settings.gradle -Papi-docs -P${{ inputs.module }} -Pprod -P${{ inputs.type }}
