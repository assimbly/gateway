name: Build and push Docker image with Jib

on:
  workflow_dispatch:
    inputs:
      BUILD_TYPE:
        required: true
        default: 'full'
        type: choice
        options:
          - integration
          - headless
          - full
      VERSION:
        description: 'beta'
        required: true
        default: 'beta'
  push:
    branches:
      - 'docker-tests'
  release:
    types: [ released ]

env:
  BUILD: true
  PUSH: true
  PUSH_PKGS: false

jobs:
  deploy_full:
    runs-on: ubuntu-latest

    env:
      BUILD_TYPE: 'full'
      VERSION_TAG: 'beta'
      GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          
          repositories: >
            [
              {
                "id": "maven",
                "name": "Maven Central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "name": "Assimbly Base Repository",
                "url": "https://maven.pkg.github.com/assimbly/base",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Runtime Repository",
                "url": "https://maven.pkg.github.com/assimbly/runtime",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Custom-Components Repository",
                "url": "https://maven.pkg.github.com/assimbly/custom-components",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "aurea",
                "name": "Aurea Sonic Repository",
                "url": "https://int-factory.aurea.com/nexus/content/repositories/sonic-releases/"
              }
            ]

          servers: >
            [
              {
                "id": "github",
                "username": "assimbly",
                "password": ${{ secrets.GITHUB_TOKEN }}
              }
            ]

      - name: Remove HTTP blocker from the built in settings.xml
        run: |
          export MAVEN_PATH=$(mvn -X | grep "home" | head -1 | cut -d " " -f 3)
          echo "this is the path: $MAVEN_PATH"
          echo '<?xml version="1.0" encoding="UTF-8"?>' > "$MAVEN_PATH/conf/settings.xml"
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.2.0" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">' >> "$MAVEN_PATH/conf/settings.xml"
          echo '</settings>' >> "$MAVEN_PATH/conf/settings.xml"
          cat $MAVEN_PATH/conf/settings.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build docker image
        run: |
          if [[ $BUILD == true ]]; then
            clear & ./gradlew clean bootJar --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $BUILD == false ]]; then
            echo "Skipped docker image build!"
          fi

      - name: Push the docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [[ $PUSH == true ]]; then
            clear & ./gradlew clean bootJar jib -Djib.to.image=assimbly/gateway-${BUILD_TYPE}:${VERSION_TAG} --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $PUSH == false ]]; then
            echo "Skipped docker image push!"
          fi

      - name: Publish to Github Packages
        run: |
          if [[ $PUSH_PKGS == true ]]; then
            ./gradlew clean publish --settings-file ./settings.gradle -Pprod
          fi

          if [[ $PUSH_PKGS == false ]]; then
            echo "Skipped packages publish!"
          fi

  deploy_integration:
    runs-on: ubuntu-latest

    env:
      BUILD_TYPE: 'integration'
      VERSION_TAG: 'beta'
      GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          
          repositories: >
            [
              {
                "id": "maven",
                "name": "Maven Central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "name": "Assimbly Base Repository",
                "url": "https://maven.pkg.github.com/assimbly/base",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Runtime Repository",
                "url": "https://maven.pkg.github.com/assimbly/runtime",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Custom-Components Repository",
                "url": "https://maven.pkg.github.com/assimbly/custom-components",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "aurea",
                "name": "Aurea Sonic Repository",
                "url": "https://int-factory.aurea.com/nexus/content/repositories/sonic-releases/"
              }
            ]

          servers: >
            [
              {
                "id": "github",
                "username": ${{ secrets.GITHUB_ACTOR }}
                "password": ${{ secrets.GITHUB_TOKEN }}
              }
            ]

      - name: Remove HTTP blocker from the built in settings.xml
        run: |
          export MAVEN_PATH=$(mvn -X | grep "home" | head -1 | cut -d " " -f 3)
          echo "this is the path: $MAVEN_PATH"
          echo '<?xml version="1.0" encoding="UTF-8"?>' > "$MAVEN_PATH/conf/settings.xml"
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.2.0" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">' >> "$MAVEN_PATH/conf/settings.xml"
          echo '</settings>' >> "$MAVEN_PATH/conf/settings.xml"
          cat $MAVEN_PATH/conf/settings.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build docker image
        run: |
          if [[ $BUILD == true ]]; then
            clear & ./gradlew clean bootJar --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $BUILD == false ]]; then
            echo "Skipped docker image build!"
          fi

      - name: Push the docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [[ $PUSH == true ]]; then
            clear & ./gradlew clean bootJar jib -Djib.to.image=assimbly/gateway-${BUILD_TYPE}:${VERSION_TAG} --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $PUSH == false ]]; then
            echo "Skipped docker image push!"
          fi

      - name: Publish to Github Packages
        run: |
          if [[ $PUSH_PKGS == true ]]; then
            ./gradlew clean publish --settings-file ./settings.gradle -Pprod
          fi

          if [[ $PUSH_PKGS == false ]]; then
            echo "Skipped packages publish!"
          fi

  deploy_headless:
    runs-on: ubuntu-latest

    env:
      BUILD_TYPE: 'headless'
      VERSION_TAG: 'beta'
      GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          
          repositories: >
            [
              {
                "id": "maven",
                "name": "Maven Central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "name": "Assimbly Base Repository",
                "url": "https://maven.pkg.github.com/assimbly/base",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Runtime Repository",
                "url": "https://maven.pkg.github.com/assimbly/runtime",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Custom-Components Repository",
                "url": "https://maven.pkg.github.com/assimbly/custom-components",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "aurea",
                "name": "Aurea Sonic Repository",
                "url": "https://int-factory.aurea.com/nexus/content/repositories/sonic-releases/"
              }
            ]

          servers: >
            [
              {
                "id": "github",
                "username": ${{ secrets.GITHUB_ACTOR }}
                "password": ${{ secrets.GITHUB_TOKEN }}
              }
            ]

      - name: Remove HTTP blocker from the built in settings.xml
        run: |
          export MAVEN_PATH=$(mvn -X | grep "home" | head -1 | cut -d " " -f 3)
          echo "this is the path: $MAVEN_PATH"
          echo '<?xml version="1.0" encoding="UTF-8"?>' > "$MAVEN_PATH/conf/settings.xml"
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.2.0" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">' >> "$MAVEN_PATH/conf/settings.xml"
          echo '</settings>' >> "$MAVEN_PATH/conf/settings.xml"
          cat $MAVEN_PATH/conf/settings.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image
        run: |
          if [[ $BUILD == true ]]; then
            clear & ./gradlew clean bootJar --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi
  
          if [[ $BUILD == false ]]; then
            echo "Skipped docker image build!"
          fi

      - name: Push the docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [[ $PUSH == true ]]; then
            clear & ./gradlew clean bootJar jib -Djib.to.image=assimbly/gateway-${BUILD_TYPE}:${VERSION_TAG} --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $PUSH == false ]]; then
            echo "Skipped docker image push!"
          fi

      - name: Publish to Github Packages           
        run: |
          if [[ $PUSH_PKGS == true ]]; then
            ./gradlew clean publish --settings-file ./settings.gradle -Pprod
          fi

          if [[ $PUSH_PKGS == false ]]; then
            echo "Skipped packages push!"
          fi

  deploy_broker:
    runs-on: ubuntu-latest

    env:
      BUILD_TYPE: 'broker'
      VERSION_TAG: 'beta'
      GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          
          repositories: >
            [
              {
                "id": "maven",
                "name": "Maven Central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "name": "Assimbly Base Repository",
                "url": "https://maven.pkg.github.com/assimbly/base",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Runtime Repository",
                "url": "https://maven.pkg.github.com/assimbly/runtime",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Custom-Components Repository",
                "url": "https://maven.pkg.github.com/assimbly/custom-components",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "aurea",
                "name": "Aurea Sonic Repository",
                "url": "https://int-factory.aurea.com/nexus/content/repositories/sonic-releases/"
              }
            ]

          servers: >
            [
              {
                "id": "github",
                "username": ${{ secrets.GITHUB_ACTOR }}
                "password": ${{ secrets.GITHUB_TOKEN }}
              }
            ]

      - name: Remove HTTP blocker from the built in settings.xml
        run: |
          export MAVEN_PATH=$(mvn -X | grep "home" | head -1 | cut -d " " -f 3)
          echo "this is the path: $MAVEN_PATH"
          echo '<?xml version="1.0" encoding="UTF-8"?>' > "$MAVEN_PATH/conf/settings.xml"
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.2.0" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">' >> "$MAVEN_PATH/conf/settings.xml"
          echo '</settings>' >> "$MAVEN_PATH/conf/settings.xml"
          cat $MAVEN_PATH/conf/settings.xml

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image
        run: |
          if [[ $BUILD == true ]]; then
            clear & ./gradlew clean bootJar --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $BUILD == false ]]; then
            echo "Skipped docker image build!"
          fi

      - name: Push the docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [[ $PUSH == true ]]; then
            clear & ./gradlew clean bootJar jib -Djib.to.image=assimbly/gateway-${BUILD_TYPE}:${VERSION_TAG} --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $PUSH == false ]]; then
            echo "Skipped docker image push!"
          fi

      - name: Publish to Github Packages
        run: |
          if [[ $PUSH_PKGS == true ]]; then
            ./gradlew clean publish --settings-file ./settings.gradle -Pprod
          fi

          if [[ $PUSH_PKGS == false ]]; then
            echo "Skipped packages push!"
          fi