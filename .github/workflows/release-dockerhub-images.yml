name: Release Docker Images on DockerHub

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      module:
        description: 'Kind of module to build'
        default: 'full'
        type: string
      branch:
        description: 'Branch to use'
        default: 'develop'
        type: string
jobs:
  publish_docker_images:
    runs-on: ubuntu-latest

    env:
      VERSION_TAG: ${{ inputs.module }}
      GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:

      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          ref: "${{ inputs.branch }}"

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:

          repositories: >
            [
              {
                "id": "maven",
                "name": "Maven Central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "name": "Assimbly Base Repository",
                "url": "https://maven.pkg.github.com/assimbly/base",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Runtime Repository",
                "url": "https://maven.pkg.github.com/assimbly/runtime",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Custom-Components Repository",
                "url": "https://maven.pkg.github.com/assimbly/custom-components",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "aurea",
                "name": "Aurea Sonic Repository",
                "url": "https://int-factory.aurea.com/nexus/content/repositories/sonic-releases/"
              }
            ]

          servers: >
            [
              {
                "id": "github",
                "username": "assimbly",
                "password": "${{ secrets.GITHUB_TOKEN }}"
              }
            ]

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Remove HTTP blocker from the built in settings.xml
        run: |
          export MAVEN_PATH=$(mvn -X | grep "home" | head -1 | cut -d " " -f 3)
          echo "this is the path: $MAVEN_PATH"
          echo '<?xml version="1.0" encoding="UTF-8"?>' > "$MAVEN_PATH/conf/settings.xml"
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.2.0" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">' >> "$MAVEN_PATH/conf/settings.xml"
          echo '</settings>' >> "$MAVEN_PATH/conf/settings.xml"
          cat $MAVEN_PATH/conf/settings.xml

      - name: Build docker image
        env:
          BUILD_TYPE: ${{ inputs.module }}

        run: |
          ./gradlew clean bootJar jibDockerBuild -Djib.to.image=assimbly/gateway-$BUILD_TYPE:$VERSION_TAG --settings-file ./settings.gradle -Papi-docs  -P${{ inputs.module }} -Pprod -Pfull

      - name: Push the docker image
        env:
          BUILD_TYPE: ${{ inputs.module }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          clear & ./gradlew clean bootJar jib -Djib.to.image=assimbly/gateway-$BUILD_TYPE:$VERSION_TAG --settings-file ./settings.gradle -Papi-docs -P${{ inputs.module }} -Pprod -Pfull
