name: New Release

on:
  release:
    types: [ released ]

jobs:
  publish_production_packages:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          ref: 'master'

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          
          repositories: >
            [
              {
                "id": "maven",
                "name": "Maven Central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "name": "Assimbly Base Repository",
                "url": "https://maven.pkg.github.com/assimbly/base",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Runtime Repository",
                "url": "https://maven.pkg.github.com/assimbly/runtime",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Custom-Components Repository",
                "url": "https://maven.pkg.github.com/assimbly/custom-components",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "aurea",
                "name": "Aurea Sonic Repository",
                "url": "https://int-factory.aurea.com/nexus/content/repositories/sonic-releases/"
              }
            ]

          servers: >
            [
              {
                "id": "github",
                "username": "assimbly",
                "password": "${{ secrets.GITHUB_TOKEN }}"
              }
            ]

      - name: Remove HTTP blocker from the built in settings.xml
        run: |
          export MAVEN_PATH=$(mvn -X | grep "home" | head -1 | cut -d " " -f 3)
          echo "this is the path: $MAVEN_PATH"
          echo '<?xml version="1.0" encoding="UTF-8"?>' > "$MAVEN_PATH/conf/settings.xml"
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.2.0" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">' >> "$MAVEN_PATH/conf/settings.xml"
          echo '</settings>' >> "$MAVEN_PATH/conf/settings.xml"
          cat $MAVEN_PATH/conf/settings.xml

      - name: Update Version
        env:
          VERSION: ${{ github.ref_name }}      
        run: |
          echo "Updating to version: $VERSION"
          ./gradlew -q version -PnewVersion=$VERSION --settings-file ./settings.gradle

      - name: Publish to Github Packages
        run: |
          ./gradlew clean publish --settings-file ./settings.gradle -Pprod

  publish_snapshot_packages:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          ref: 'develop'

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          
          repositories: >
            [
              {
                "id": "maven",
                "name": "Maven Central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "name": "Assimbly Base Repository",
                "url": "https://maven.pkg.github.com/assimbly/base",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Runtime Repository",
                "url": "https://maven.pkg.github.com/assimbly/runtime",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Custom-Components Repository",
                "url": "https://maven.pkg.github.com/assimbly/custom-components",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "aurea",
                "name": "Aurea Sonic Repository",
                "url": "https://int-factory.aurea.com/nexus/content/repositories/sonic-releases/"
              }
            ]

          servers: >
            [
              {
                "id": "github",
                "username": "assimbly",
                "password": "${{ secrets.GITHUB_TOKEN }}"
              }
            ]

      - name: Remove HTTP blocker from the built in settings.xml
        run: |
          export MAVEN_PATH=$(mvn -X | grep "home" | head -1 | cut -d " " -f 3)
          echo "this is the path: $MAVEN_PATH"
          echo '<?xml version="1.0" encoding="UTF-8"?>' > "$MAVEN_PATH/conf/settings.xml"
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.2.0" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">' >> "$MAVEN_PATH/conf/settings.xml"
          echo '</settings>' >> "$MAVEN_PATH/conf/settings.xml"
          cat $MAVEN_PATH/conf/settings.xml

      - name: Update Version
        env:
          SNAPSHOT_VERSION: ${{ github.ref_name }}-SNAPSHOT

        run: |
          echo "Updating to version: $SNAPSHOT_VERSION"
          ./gradlew -q version -PnewVersion=$SNAPSHOT_VERSION --settings-file ./settings.gradle

      - name: Publish to Github Packages
        run: |
          ./gradlew clean publish --settings-file ./settings.gradle -Pprod

  publish_docker_images:
    runs-on: ubuntu-latest

    env:
      VERSION_TAG: ${{ github.ref_name }}
      GITHUB_ACTOR: ${{ secrets.GITHUB_ACTOR }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:

      - name: Checkout the code
        uses: actions/checkout@v3
        with:
          ref: 'master'

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          
          repositories: >
            [
              {
                "id": "maven",
                "name": "Maven Central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "name": "Assimbly Base Repository",
                "url": "https://maven.pkg.github.com/assimbly/base",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Runtime Repository",
                "url": "https://maven.pkg.github.com/assimbly/runtime",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Custom-Components Repository",
                "url": "https://maven.pkg.github.com/assimbly/custom-components",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "aurea",
                "name": "Aurea Sonic Repository",
                "url": "https://int-factory.aurea.com/nexus/content/repositories/sonic-releases/"
              }
            ]

          servers: >
            [
              {
                "id": "github",
                "username": "assimbly",
                "password": "${{ secrets.GITHUB_TOKEN }}"
              }
            ]

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Remove HTTP blocker from the built in settings.xml
        run: |
          export MAVEN_PATH=$(mvn -X | grep "home" | head -1 | cut -d " " -f 3)
          echo "this is the path: $MAVEN_PATH"
          echo '<?xml version="1.0" encoding="UTF-8"?>' > "$MAVEN_PATH/conf/settings.xml"
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.2.0" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">' >> "$MAVEN_PATH/conf/settings.xml"
          echo '</settings>' >> "$MAVEN_PATH/conf/settings.xml"
          cat $MAVEN_PATH/conf/settings.xml

      - name: Build docker image (full)
        env:
          BUILD_TYPE: 'full'

        run: |
          if [[ $BUILD == true ]]; then
            ./gradlew clean bootJar jibDockerBuild -Djib.to.image=assimbly/gateway-$BUILD_TYPE:$VERSION_TAG --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $BUILD == false ]]; then
            echo "Skipped docker image build!"
          fi

      - name: Push the docker image (full)
        env:
          BUILD_TYPE: 'full'
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [[ $PUSH == true ]]; then
            clear & ./gradlew clean bootJar jib -Djib.to.image=assimbly/gateway-$BUILD_TYPE:$VERSION_TAG --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $PUSH == false ]]; then
            echo "Skipped docker image push!"
          fi

      - name: Build docker image (integration)
        env:
          BUILD_TYPE: 'integration'

        run: |
          if [[ $BUILD == true ]]; then
            ./gradlew clean bootJar jibDockerBuild -Djib.to.image=assimbly/gateway-$BUILD_TYPE:$VERSION_TAG --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $BUILD == false ]]; then
            echo "Skipped docker image build!"
          fi

      - name: Push the docker image (integration)
        env:
          BUILD_TYPE: 'integration'
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [[ $PUSH == true ]]; then
            clear & ./gradlew clean bootJar jib -Djib.to.image=assimbly/gateway-$BUILD_TYPE:$VERSION_TAG --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $PUSH == false ]]; then
            echo "Skipped docker image push!"
          fi

      - name: Build docker image (headless)
        env:
          BUILD_TYPE: 'headless'

        run: |
          if [[ $BUILD == true ]]; then
            ./gradlew clean bootJar jibDockerBuild -Djib.to.image=assimbly/gateway-$BUILD_TYPE:$VERSION_TAG --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $BUILD == false ]]; then
            echo "Skipped docker image build!"
          fi

      - name: Push the docker image (headless)
        env:
          BUILD_TYPE: 'headless'
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [[ $PUSH == true ]]; then
            clear & ./gradlew clean bootJar jib -Djib.to.image=assimbly/gateway-$BUILD_TYPE:$VERSION_TAG --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $PUSH == false ]]; then
            echo "Skipped docker image push!"
          fi

      - name: Build docker image (broker)
        env:
          BUILD_TYPE: 'broker'
        run: |
          if [[ $BUILD == true ]]; then
            ./gradlew clean bootJar jibDockerBuild -Djib.to.image=assimbly/gateway-$BUILD_TYPE:$VERSION_TAG --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $BUILD == false ]]; then
            echo "Skipped docker image build!"
          fi

      - name: Push the docker image (broker)
        env:
          BUILD_TYPE: 'broker'
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          if [[ $PUSH == true ]]; then
            clear & ./gradlew clean bootJar jib -Djib.to.image=assimbly/gateway-$BUILD_TYPE:$VERSION_TAG --settings-file ./settings.gradle  -Papi-docs -Pprod -PbuildType=$BUILD_TYPE
          fi

          if [[ $PUSH == false ]]; then
            echo "Skipped docker image push!"
          fi

  publish_aws_images:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          ref: 'master'

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Setup Maven settings.xml
        uses: whelk-io/maven-settings-xml-action@v20
        with:
          
          repositories: >
            [
              {
                "id": "maven",
                "name": "Maven Central",
                "url": "https://repo1.maven.org/maven2"
              },
              {
                "id": "github",
                "name": "Assimbly Base Repository",
                "url": "https://maven.pkg.github.com/assimbly/base",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Runtime Repository",
                "url": "https://maven.pkg.github.com/assimbly/runtime",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "github",
                "name": "Assimbly Custom-Components Repository",
                "url": "https://maven.pkg.github.com/assimbly/custom-components",
                "snapshots": {
                  "enabled": "true"
                }
              },
              {
                "id": "aurea",
                "name": "Aurea Sonic Repository",
                "url": "https://int-factory.aurea.com/nexus/content/repositories/sonic-releases/"
              }
            ]

          servers: >
            [
              {
                "id": "github",
                "username": "assimbly",
                "password": "${{ secrets.GITHUB_TOKEN }}"
              }
            ]

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Remove HTTP blocker from the built in settings.xml
        run: |
          export MAVEN_PATH=$(mvn -X | grep "home" | head -1 | cut -d " " -f 3)
          echo "this is the path: $MAVEN_PATH"
          echo '<?xml version="1.0" encoding="UTF-8"?>' > "$MAVEN_PATH/conf/settings.xml"
          echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.2.0" xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.2.0 https://maven.apache.org/xsd/settings-1.2.0.xsd">' >> "$MAVEN_PATH/conf/settings.xml"
          echo '</settings>' >> "$MAVEN_PATH/conf/settings.xml"
          cat $MAVEN_PATH/conf/settings.xml

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push gateway image to Amazon ECR
        run: |
          echo "Pushing to aws"
